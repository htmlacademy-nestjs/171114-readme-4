// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
enum PostType {
video
text
quote
photo
reference
}

enum PostStatus {
  published
  draft
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  output          = "../../../../../node_modules/.prisma/client"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  postId        Int               @id @default(autoincrement()) @map("post_id")
  userId        String?           @map("user_id")
  originUserId  String?           @map("origin_user_id")
  originId      Int?              @map("origin_post_id")
  type          PostType
  createdDate   DateTime          @default(now()) @map("created_date")
  postedDate    DateTime          @default(now()) @map("posted_date")
  status        PostStatus        @default(draft)
  isReposted    Boolean           @default(false) @map("is_reposted")
  tags          String[]
  likesCount    Int               @map("likes_count")
  commentsCount Int               @map("comments_count")
  link          String?
  description   String?
  photo         String?
  text          String?
  author        String?
  title         String?
  announcement  String?
  comments      Comment[]
  likes         Like?

  @@map("publications")
}

model Comment {
  commentId   Int         @id @default(autoincrement()) @map("comment_id")
  userId      String      @default("") @map("user_id")
  post        Post @relation(fields: [postId], references: [postId], onDelete: Cascade, onUpdate: Cascade)
  postId      Int         @map("post_id")
  createdDate DateTime    @default(now()) @map("created_date")
  text        String      @default("")

  @@map("comments")
}

model Like {
  post     Post @relation(fields: [postId], references: [postId], onDelete: Cascade)
  postId          Int         @id @unique @map("post_id")
  likedByUsersIds String[]    @map("liked_by_ids")

  @@map("likes")
}
